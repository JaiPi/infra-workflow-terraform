---
name: Reusable Terraform CD

on:
  workflow_call:
    inputs:
      runner:
        type: string
        required: false
        default: id
      terraform_version:
        type: string
        required: false
      repositories:
        type: string
        required: false
      aws_region:
        type: string
        required: false
        default: eu-west-1
      role_to_assume:
        type: string
        required: true
      working_directory:
        type: string
        required: false
        default: '.'
      backend_config_file:
        type: string
        required: false      
      terraform_workspace:
        type: string
        required: false
        default: default
      vars_file_directory:
        type: string
        required: false
        default: environments
      environment:
        type: string
        required: true

permissions:
  contents: read
  id-token: write

env:
  # https://developer.hashicorp.com/terraform/cli/config/environment-variables
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  terraform-ci:
    name: Terraform Plan for ${{ inputs.terraform_workspace }}
    runs-on: vtv-runner-set-${{ inputs.runner }}
    outputs:
      run_number: ${{ github.run_number }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Setup AWS CLI
        uses: CelfocusProduct-VTV/setup-aws-cli@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate Github Token
        id: gh-token
        if: ${{ inputs.repositories }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_REPO_READER_APP_ID }}
          private-key: ${{ secrets.GH_REPO_READER_PRIVATE_KEY }}
          repositories: ${{ inputs.repositories }}

      - name: Configure URL with Github Token
        if: ${{ inputs.repositories }}
        run: git config --global url."https://oauth2:${{ steps.gh-token.outputs.token }}@github.com".insteadOf "https://github.com"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.role_to_assume }}

      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Check if Terraform is formatted
        run: terraform fmt -recursive -diff -check

      - name: Initialize Terraform
        run: terraform init --backend-config=${{ inputs.backend_config_file }}

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Select Terraform workspace
        run: terraform workspace select -or-create ${{ inputs.terraform_workspace }}

      - name: Generate Terraform plan
        run: terraform plan -out=tfplan -var-file=${{ inputs.vars_file_directory }}/${{ inputs.terraform_workspace }}.tfvars
      
      - name: Upload Terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ inputs.terraform_workspace }}-${{ github.run_number }}
          path: ${{ inputs.working_directory }}/tfplan
          retention-days: 7
          
  terraform-cd:
    name: Terraform Apply for ${{ inputs.terraform_workspace }}
    environment: ${{ inputs.environment }}
    runs-on: vtv-runner-set-${{ inputs.runner }}
    needs: terraform-ci
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Setup AWS CLI
        uses: CelfocusProduct-VTV/setup-aws-cli@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate Github Token
        id: gh-token
        if: ${{ inputs.repositories }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_REPO_READER_APP_ID }}
          private-key: ${{ secrets.GH_REPO_READER_PRIVATE_KEY }}
          repositories: ${{ inputs.repositories }}

      - name: Configure URL with Github Token
        if: ${{ inputs.repositories }}
        run: git config --global url."https://oauth2:${{ steps.gh-token.outputs.token }}@github.com".insteadOf "https://github.com"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.role_to_assume }}

      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Download Terraform plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ inputs.terraform_workspace }}-${{ needs.terraform-ci.outputs.run_number }}
          path: ${{ inputs.working_directory }}

      - name: Initialize Terraform
        run: terraform init --backend-config=${{ inputs.backend_config_file }}

      - name: Show Terraform plan
        run: terraform show tfplan

      - name: Updates infrastructure
        run: terraform apply tfplan